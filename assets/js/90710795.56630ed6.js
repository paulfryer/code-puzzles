"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4681],{1470:(e,n,i)=>{i.d(n,{A:()=>w});var t=i(6540),r=i(4164),s=i(3104),l=i(6347),a=i(205),o=i(7485),c=i(1682),d=i(679);function h(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:i,default:t}})=>({value:e,label:n,attributes:i,default:t}))}(i);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const i=(0,l.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})},[r,i])]}function x(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,s=u(e),[l,o]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s})),[c,h]=m({queryString:i,groupId:r}),[x,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,r]=(0,d.Dv)(n);return[i,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),j=(()=>{const e=c??x;return p({value:e,tabValues:s})?e:null})();(0,a.A)(()=>{j&&o(j)},[j]);return{selectedValue:l,selectValue:(0,t.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),g(e)},[h,g,s]),tabValues:s}}var g=i(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=i(4848);function y({className:e,block:n,selectedValue:i,selectValue:t,tabValues:l}){const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const n=e.currentTarget,r=a.indexOf(n),s=l[r].value;s!==i&&(o(n),t(s))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=a.indexOf(e.currentTarget)+1;n=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(e.currentTarget)-1;n=a[i]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:t})=>(0,f.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:c,...t,className:(0,r.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:i}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===i);return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function v(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,f.jsx)(v,{...e,children:h(e.children)},String(n))}},4011:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"puzzles/billion-users","title":"1 Billion Users","description":"Problem Statement","source":"@site/docs/puzzles/billion-users.mdx","sourceDirName":"puzzles","slug":"/puzzles/billion-users","permalink":"/docs/puzzles/billion-users","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/puzzles/billion-users.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Big O Complexity Guide","permalink":"/docs/complexity/"},"next":{"title":"Balanced Brackets","permalink":"/docs/puzzles/balanced-brackets"}}');var r=i(4848),s=i(8453),l=i(1470),a=i(9365);const o={},c="1 Billion Users",d={},h=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"Approach Breakdown",id:"approach-breakdown",level:2},{value:"Step 1: Understanding the Mathematical Model",id:"step-1-understanding-the-mathematical-model",level:3},{value:"Step 2: Solution Strategy",id:"step-2-solution-strategy",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Initial Solution (Linear Search)",id:"initial-solution-linear-search",level:3},{value:"Optimized Solution (Binary Search)",id:"optimized-solution-binary-search",level:3},{value:"Complexity Deep Dive",id:"complexity-deep-dive",level:2},{value:"Time Complexity Comparison",id:"time-complexity-comparison",level:3},{value:"Space Complexity",id:"space-complexity",level:3},{value:"Edge Cases &amp; Gotchas",id:"edge-cases--gotchas",level:2},{value:"Critical Edge Cases",id:"critical-edge-cases",level:3},{value:"Interview Tips",id:"interview-tips",level:2},{value:"What Interviewers Look For",id:"what-interviewers-look-for",level:3},{value:"Discussion Points",id:"discussion-points",level:3},{value:"Practice Variations",id:"practice-variations",level:2},{value:"Key Takeaways",id:"key-takeaways",level:2}];function u(e){const n={admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"1-billion-users",children:"1 Billion Users"})}),"\n","\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["You are tasked with determining when a collection of mobile apps will reach a combined total of ",(0,r.jsx)(n.strong,{children:"1 billion users"}),". Each app has a different growth rate, where the number of users for an app with growth rate ",(0,r.jsx)(n.code,{children:"g"})," at time ",(0,r.jsx)(n.code,{children:"t"})," days is ",(0,r.jsx)(n.code,{children:"g^t"}),". All apps launch simultaneously, no user uses multiple apps, and you need to find how many ",(0,r.jsx)(n.strong,{children:"full days"})," it takes to reach exactly 1 billion total users."]}),"\n",(0,r.jsxs)(n.admonition,{title:"Real-World Context",type:"tip",children:[(0,r.jsx)(n.p,{children:"This problem models scenarios like:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tech Startup Growth"}),": Predicting when multiple product lines will hit market milestones"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Investment Portfolio"}),": Calculating compound growth across different assets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Planning"}),": Determining when distributed systems will reach capacity limits"]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Understand exponential growth modeling and mathematical optimization"}),"\n",(0,r.jsx)(n.li,{children:"Master binary search techniques for finding solutions to equations"}),"\n",(0,r.jsx)(n.li,{children:"Apply numerical methods to solve transcendental equations"}),"\n",(0,r.jsx)(n.li,{children:"Practice handling floating-point precision in iterative algorithms"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-breakdown",children:"Approach Breakdown"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-understanding-the-mathematical-model",children:"Step 1: Understanding the Mathematical Model"}),"\n",(0,r.jsxs)(n.p,{children:["Given growth rates ",(0,r.jsx)(n.code,{children:"[g\u2081, g\u2082, ..., g\u2099]"}),", we need to find the smallest integer ",(0,r.jsx)(n.code,{children:"t"})," such that:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"g\u2081^t + g\u2082^t + ... + g\u2099^t \u2265 1,000,000,000\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The key insight is that ",(0,r.jsx)(n.strong,{children:"the sum of exponential functions is strictly increasing"}),", making this problem perfect for binary search optimization."]}),"\n",(0,r.jsx)(n.h3,{id:"step-2-solution-strategy",children:"Step 2: Solution Strategy"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsxs)(a.A,{value:"naive",label:"Naive Approach",children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Linear Search"}),": Start from day 1 and increment until we reach the target."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Simple to implement"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Time complexity: O(D \xd7 N) where D can be very large"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Inefficient for large search spaces"}),"\n"]})]}),(0,r.jsxs)(a.A,{value:"optimized",label:"Optimized Approach",children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Binary Search"}),": Leverage the monotonic growth property."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Time complexity: O(log D \xd7 N)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Efficient for large search spaces"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Scalable solution"}),"\n"]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"initial-solution-linear-search",children:"Initial Solution (Linear Search)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="BillionUsersLinear.cs"',children:"using System;\n\nclass BillionUsers \n{\n    static void Main(string[] args) \n    {\n        // Test cases\n        Console.WriteLine(GetBillionUsersDay(new float[] {1.5f})); // Expected: 52\n        Console.WriteLine(GetBillionUsersDay(new float[] {1.1f, 1.2f, 1.3f})); // Expected: 79\n        Console.WriteLine(GetBillionUsersDay(new float[] {1.01f, 1.02f})); // Expected: 1047\n    }\n\n    private static int GetBillionUsersDay(float[] growthRates) \n    {\n        int day = 1;\n        const long TARGET = 1_000_000_000L;\n        \n        while (true) \n        {\n            double totalUsers = 0;\n            foreach (float rate in growthRates) \n            {\n                totalUsers += Math.Pow(rate, day);\n            }\n            \n            if (totalUsers >= TARGET) \n            {\n                return day;\n            }\n            day++;\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Complexity Analysis:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time"}),": O(D \xd7 N) where D is the number of days, N is number of apps"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Space"}),": O(1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Issue"}),": Can be very slow for large growth periods"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"optimized-solution-binary-search",children:"Optimized Solution (Binary Search)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="BillionUsersBinarySearch.cs"',children:"using System;\n\nclass BillionUsers \n{\n    static void Main(string[] args) \n    {\n        // Test cases\n        Console.WriteLine(GetBillionUsersDay(new float[] {1.5f})); // Expected: 52\n        Console.WriteLine(GetBillionUsersDay(new float[] {1.1f, 1.2f, 1.3f})); // Expected: 79\n        Console.WriteLine(GetBillionUsersDay(new float[] {1.01f, 1.02f})); // Expected: 1047\n    }\n\n    private static int GetBillionUsersDay(float[] growthRates) \n    {\n        const long TARGET = 1_000_000_000L;\n        \n        // Binary search bounds\n        int left = 1;\n        int right = 2000; // Conservative upper bound\n        \n        // Find the first day that meets the target\n        while (left < right) \n        {\n            int mid = left + (right - left) / 2;\n            \n            if (CalculateTotalUsers(growthRates, mid) >= TARGET) \n            {\n                right = mid; // Found valid day, try to find earlier\n            } \n            else \n            {\n                left = mid + 1; // Need more days\n            }\n        }\n        \n        return left;\n    }\n    \n    private static double CalculateTotalUsers(float[] growthRates, int day) \n    {\n        double totalUsers = 0;\n        \n        foreach (float rate in growthRates) \n        {\n            totalUsers += Math.Pow(rate, day);\n            \n            // Early termination optimization\n            if (totalUsers > 2_000_000_000) \n            {\n                break;\n            }\n        }\n        \n        return totalUsers;\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Complexity Analysis:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time"}),": O(log D \xd7 N) where D \u2264 2000, N is number of apps"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Space"}),": O(1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Advantage"}),": Dramatically faster for large search spaces"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"complexity-deep-dive",children:"Complexity Deep Dive"}),"\n",(0,r.jsx)(n.h3,{id:"time-complexity-comparison",children:"Time Complexity Comparison"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Approach"}),(0,r.jsx)(n.th,{children:"Time Complexity"}),(0,r.jsx)(n.th,{children:"Example (N=3, D=1000)"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Linear Search"}),(0,r.jsx)(n.td,{children:"O(D \xd7 N)"}),(0,r.jsx)(n.td,{children:"~3,000 operations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Binary Search"}),(0,r.jsx)(n.td,{children:"O(log D \xd7 N)"}),(0,r.jsx)(n.td,{children:"~30 operations"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["The binary search provides approximately ",(0,r.jsx)(n.strong,{children:"100x improvement"})," for this scenario!"]}),"\n",(0,r.jsx)(n.h3,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,r.jsxs)(n.p,{children:["Both solutions use ",(0,r.jsx)(n.strong,{children:"O(1)"})," space, storing only:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Loop counters"}),"\n",(0,r.jsx)(n.li,{children:"Temporary sum variables"}),"\n",(0,r.jsx)(n.li,{children:"Binary search bounds"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"edge-cases--gotchas",children:"Edge Cases & Gotchas"}),"\n",(0,r.jsx)(n.admonition,{title:"Floating-Point Precision",type:"warning",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Be careful with floating-point comparisons\nif (totalUsers >= TARGET) // \u2705 Good\n// vs\nif (totalUsers == TARGET) // \u274c Risky due to precision\n"})})}),"\n",(0,r.jsx)(n.h3,{id:"critical-edge-cases",children:"Critical Edge Cases"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Single App, Slow Growth"}),": ",(0,r.jsx)(n.code,{children:"growthRates = [1.01f]"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Requires ~1600+ days"}),"\n",(0,r.jsx)(n.li,{children:"Tests algorithm efficiency"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Multiple Apps, Fast Growth"}),": ",(0,r.jsx)(n.code,{children:"growthRates = [1.9f, 1.9f, 1.9f]"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Solution found quickly (~15-20 days)"}),"\n",(0,r.jsx)(n.li,{children:"Tests early convergence"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Precision Boundaries"}),": Apps with growth rates very close to 1.0"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"May require careful handling of Math.Pow precision"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"interview-tips",children:"Interview Tips"}),"\n",(0,r.jsx)(n.h3,{id:"what-interviewers-look-for",children:"What Interviewers Look For"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Problem Recognition"}),": Identifying this as a binary search problem"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Boundary Handling"}),": Proper upper bound selection and edge case management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimization Mindset"}),": Moving from O(D\xd7N) to O(log D\xd7N)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Precision Awareness"}),": Understanding floating-point arithmetic challenges"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"discussion-points",children:"Discussion Points"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Why binary search works"}),": Monotonic growth property"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alternative approaches"}),": Newton's method, analytical solutions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-world applications"}),": Business growth modeling, capacity planning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),": How the solution handles larger datasets"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"practice-variations",children:"Practice Variations"}),"\n",(0,r.jsx)(n.p,{children:"Try these related problems to deepen your understanding:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modified Target"}),": Find when total users reach exactly 500 million"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Growth Decay"}),": Handle scenarios where growth rates change over time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multiple Milestones"}),": Find all days where total crosses 100M, 500M, 1B users"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Constraint Optimization"}),": Minimize total cost while reaching the user target"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Exponential Growth Modeling"}),": Real-world business scenarios often involve compound growth",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Binary Search Optimization"}),": Monotonic properties enable logarithmic search optimizations",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Numerical Precision"}),": Floating-point arithmetic requires careful boundary handling",(0,r.jsx)(n.br,{}),"\n","\u2705 ",(0,r.jsx)(n.strong,{children:"Algorithm Scalability"}),": The right algorithm can provide 100x+ performance improvements"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This problem demonstrates the power of recognizing mathematical properties (monotonicity) and applying the right algorithmic technique (binary search) to achieve optimal performance in real-world growth modeling scenarios."})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},9365:(e,n,i)=>{i.d(n,{A:()=>l});i(6540);var t=i(4164);const r={tabItem:"tabItem_Ymn6"};var s=i(4848);function l({children:e,hidden:n,className:i}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,i),hidden:n,children:e})}}}]);