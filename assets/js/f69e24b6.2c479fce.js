"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9523],{1470:(e,t,n)=>{n.d(t,{A:()=>k});var i=n(6540),r=n(4164),s=n(3104),l=n(6347),a=n(205),o=n(7485),d=n(1682),c=n(679);function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x(e){const{values:t,children:n}=e;return(0,i.useMemo)(()=>{const e=t??function(e){return h(e).map(({props:{value:e,label:t,attributes:n,default:i}})=>({value:e,label:t,attributes:n,default:i}))}(n);return function(e){const t=(0,d.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function u({queryString:e=!1,groupId:t}){const n=(0,l.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,o.aZ)(r),(0,i.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=x(e),[l,o]=(0,i.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s})),[d,h]=u({queryString:n,groupId:r}),[p,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,c.Dv)(t);return[n,(0,i.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),f=(()=>{const e=d??p;return m({value:e,tabValues:s})?e:null})();(0,a.A)(()=>{f&&o(f)},[f]);return{selectedValue:l,selectValue:(0,i.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),g(e)},[h,g,s]),tabValues:s}}var g=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=n(4848);function w({className:e,block:t,selectedValue:n,selectValue:i,tabValues:l}){const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),d=e=>{const t=e.currentTarget,r=a.indexOf(t),s=l[r].value;s!==n&&(o(t),i(s))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=a.indexOf(e.currentTarget)+1;t=a[n]??a[0];break}case"ArrowLeft":{const n=a.indexOf(e.currentTarget)-1;t=a[n]??a[a.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:l.map(({value:e,label:t,attributes:i})=>(0,j.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{a.push(e)},onKeyDown:c,onClick:d,...i,className:(0,r.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function y({lazy:e,children:t,selectedValue:n}){const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===n);return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function b(e){const t=p(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,j.jsx)(w,{...t,...e}),(0,j.jsx)(y,{...t,...e})]})}function k(e){const t=(0,g.A)();return(0,j.jsx)(b,{...e,children:h(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function l(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:t},e.children)}},8696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"puzzles/element-swapping","title":"Element Swapping","description":"Problem Statement","source":"@site/docs/puzzles/element-swapping.mdx","sourceDirName":"puzzles","slug":"/puzzles/element-swapping","permalink":"/code-puzzles/docs/puzzles/element-swapping","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/puzzles/element-swapping.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Counting Triangles","permalink":"/code-puzzles/docs/puzzles/counting-triangles"},"next":{"title":"Encrypted Words","permalink":"/code-puzzles/docs/puzzles/encrypted-words"}}');var r=n(4848),s=n(8453),l=n(1470),a=n(9365);const o={},d="Element Swapping",c={},h=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Visual Understanding",id:"visual-understanding",level:2},{value:"The Element Swapping Process",id:"the-element-swapping-process",level:3},{value:"Greedy Strategy Visualization",id:"greedy-strategy-visualization",level:3},{value:"Key Strategy",id:"key-strategy",level:2},{value:"The Greedy Bubble Approach - Visual Metaphor",id:"the-greedy-bubble-approach---visual-metaphor",level:3},{value:"Step-by-Step Algorithm",id:"step-by-step-algorithm",level:2},{value:"Complete Example: [5, 3, 1, 2, 4] with k = 3",id:"complete-example-5-3-1-2-4-with-k--3",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Optimized Implementation with Better Tracking",id:"optimized-implementation-with-better-tracking",level:3},{value:"Complexity Analysis",id:"complexity-analysis",level:2},{value:"Visual Complexity Breakdown",id:"visual-complexity-breakdown",level:3},{value:"Edge Cases &amp; Validation",id:"edge-cases--validation",level:2},{value:"Practice Variations",id:"practice-variations",level:2},{value:"Key Takeaways",id:"key-takeaways",level:2},{value:"Visual Summary",id:"visual-summary",level:3}];function x(e){const t={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"element-swapping",children:"Element Swapping"})}),"\n","\n",(0,r.jsx)(t.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(t.p,{children:["Given a sequence of ",(0,r.jsx)(t.strong,{children:"n integers"})," and a limit of ",(0,r.jsx)(t.strong,{children:"k consecutive swaps"}),", determine the ",(0,r.jsx)(t.strong,{children:"lexicographically smallest"})," sequence achievable. Each swap can only involve ",(0,r.jsx)(t.strong,{children:"adjacent elements"})," in the current arrangement."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Function Signature"}),": ",(0,r.jsx)(t.code,{children:"int[] FindMinArray(int[] arr, int k)"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Input"}),": Array of integers and maximum number of adjacent swaps allowed",(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Output"}),": Lexicographically smallest array achievable"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Example"}),":"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Input: ",(0,r.jsx)(t.code,{children:"[5, 3, 1], k = 2"})]}),"\n",(0,r.jsxs)(t.li,{children:["Output: ",(0,r.jsx)(t.code,{children:"[1, 5, 3]"})," (swap 3,1 then 5,1)"]}),"\n"]}),"\n",(0,r.jsxs)(t.admonition,{title:"Real-World Applications",type:"tip",children:[(0,r.jsx)(t.p,{children:"This optimization pattern appears in:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Sorting Algorithms"}),": Bubble sort with limited iterations"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Compiler Optimization"}),": Instruction reordering with constraints"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Task Scheduling"}),": Priority-based scheduling with limited moves"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Game Development"}),": Puzzle games with move limits"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Database Query Optimization"}),": Join order optimization"]}),"\n"]})]}),"\n",(0,r.jsx)(t.h2,{id:"visual-understanding",children:"Visual Understanding"}),"\n",(0,r.jsx)(t.h3,{id:"the-element-swapping-process",children:"The Element Swapping Process"}),"\n",(0,r.jsxs)("svg",{viewBox:"0 0 800 500",xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("text",{x:"400",y:"30","text-anchor":"middle","font-size":"20","font-weight":"bold",children:"Element Swapping Visualization"}),(0,r.jsxs)("g",{transform:"translate(100, 70)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"14","font-weight":"bold",children:"Initial Array: k = 2 swaps remaining"}),(0,r.jsx)("rect",{x:"0",y:"10",width:"50",height:"40",fill:"#FFB6C1",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"25",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"5"}),(0,r.jsx)("rect",{x:"60",y:"10",width:"50",height:"40",fill:"#FFE4B5",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"85",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"3"}),(0,r.jsx)("rect",{x:"120",y:"10",width:"50",height:"40",fill:"#98FB98",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"145",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"1"}),(0,r.jsx)("text",{x:"200",y:"35","font-size":"12",children:"Target: Move smallest to front"})]}),(0,r.jsxs)("g",{transform:"translate(100, 150)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"14","font-weight":"bold",children:"Step 1: Swap 3 \u2194 1 (k = 1 remaining)"}),(0,r.jsx)("rect",{x:"0",y:"10",width:"50",height:"40",fill:"#FFB6C1",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"25",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"5"}),(0,r.jsx)("rect",{x:"60",y:"10",width:"50",height:"40",fill:"#98FB98",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"85",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"1"}),(0,r.jsx)("rect",{x:"120",y:"10",width:"50",height:"40",fill:"#FFE4B5",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"145",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"3"}),(0,r.jsx)("path",{d:"M 85 60 Q 85 80, 145 80 Q 145 100, 145 60",stroke:"blue","stroke-width":"2",fill:"none","marker-end":"url(#arrowblue)"}),(0,r.jsx)("path",{d:"M 145 60 Q 145 80, 85 80 Q 85 100, 85 60",stroke:"blue","stroke-width":"2",fill:"none","marker-end":"url(#arrowblue)"})]}),(0,r.jsxs)("g",{transform:"translate(100, 250)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"14","font-weight":"bold",children:"Step 2: Swap 5 \u2194 1 (k = 0 remaining)"}),(0,r.jsx)("rect",{x:"0",y:"10",width:"50",height:"40",fill:"#98FB98",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"25",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"1"}),(0,r.jsx)("rect",{x:"60",y:"10",width:"50",height:"40",fill:"#FFB6C1",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"85",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"5"}),(0,r.jsx)("rect",{x:"120",y:"10",width:"50",height:"40",fill:"#FFE4B5",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"145",y:"35","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"3"}),(0,r.jsx)("path",{d:"M 25 60 Q 25 80, 85 80 Q 85 100, 85 60",stroke:"blue","stroke-width":"2",fill:"none","marker-end":"url(#arrowblue)"}),(0,r.jsx)("path",{d:"M 85 60 Q 85 80, 25 80 Q 25 100, 25 60",stroke:"blue","stroke-width":"2",fill:"none","marker-end":"url(#arrowblue)"})]}),(0,r.jsxs)("g",{transform:"translate(100, 350)",children:[(0,r.jsx)("rect",{x:"-10",y:"0",width:"190",height:"60",fill:"#FFD700",stroke:"black","stroke-width":"2",rx:"5"}),(0,r.jsx)("text",{x:"85",y:"20","text-anchor":"middle","font-size":"14","font-weight":"bold",children:"Final Result:"}),(0,r.jsx)("text",{x:"85",y:"45","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"[1, 5, 3]"})]}),(0,r.jsxs)("g",{transform:"translate(400, 150)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"14","font-weight":"bold",children:"Lexicographic Comparison:"}),(0,r.jsx)("text",{x:"0",y:"30","font-size":"12",children:"[1, 5, 3] < [3, 1, 5] < [5, 1, 3] < [5, 3, 1]"}),(0,r.jsx)("text",{x:"0",y:"50","font-size":"12",fill:"green",children:"\u2713 Smallest possible"})]}),(0,r.jsx)("defs",{children:(0,r.jsx)("marker",{id:"arrowblue",markerWidth:"10",markerHeight:"7",refX:"9",refY:"3.5",orient:"auto",fill:"blue",children:(0,r.jsx)("polygon",{points:"0 0, 10 3.5, 0 7"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"greedy-strategy-visualization",children:"Greedy Strategy Visualization"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-mermaid",children:'flowchart TD\n    Start["Array: [5, 3, 1]<br/>k = 2 swaps"]\n    \n    Q1{"Position 0:<br/>Find min within k=2 reach"}\n    F1["Can reach indices 0,1,2<br/>Min value: 1 at index 2"]\n    S1["Bubble 1 to position 0<br/>Cost: 2 swaps"]\n    \n    R1["Array: [1, 5, 3]<br/>k = 0 swaps"]\n    \n    Q2{"Position 1:<br/>Find min within k=0 reach"}\n    F2["No swaps left<br/>Keep current order"]\n    \n    Final["Final: [1, 5, 3]"]\n    \n    Start --\x3e Q1\n    Q1 --\x3e F1\n    F1 --\x3e S1\n    S1 --\x3e R1\n    R1 --\x3e Q2\n    Q2 --\x3e F2\n    F2 --\x3e Final\n    \n    style Start fill:#FFE4B5\n    style Final fill:#90EE90\n    style Q1 fill:#E6E6FA\n    style Q2 fill:#E6E6FA\n'})}),"\n",(0,r.jsx)(t.h2,{id:"key-strategy",children:"Key Strategy"}),"\n",(0,r.jsx)(t.h3,{id:"the-greedy-bubble-approach---visual-metaphor",children:"The Greedy Bubble Approach - Visual Metaphor"}),"\n",(0,r.jsxs)(t.p,{children:["Think of it like ",(0,r.jsx)(t.strong,{children:"organizing a line of people by height"})," with limited moves:"]}),"\n",(0,r.jsxs)("svg",{viewBox:"0 0 700 300",xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("text",{x:"350",y:"30","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"The Greedy Selection Process"}),(0,r.jsxs)("g",{transform:"translate(50, 60)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"14","font-weight":"bold",children:"For each position (left to right):"}),(0,r.jsx)("rect",{x:"0",y:"20",width:"40",height:"40",fill:"#90EE90",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"20",y:"45","text-anchor":"middle","font-size":"12",children:"Pos 0"}),(0,r.jsx)("rect",{x:"50",y:"20",width:"40",height:"40",fill:"#E0E0E0",stroke:"black","stroke-width":"1"}),(0,r.jsx)("text",{x:"70",y:"45","text-anchor":"middle","font-size":"12",children:"Pos 1"}),(0,r.jsx)("rect",{x:"100",y:"20",width:"40",height:"40",fill:"#E0E0E0",stroke:"black","stroke-width":"1"}),(0,r.jsx)("text",{x:"120",y:"45","text-anchor":"middle","font-size":"12",children:"Pos 2"}),(0,r.jsx)("rect",{x:"150",y:"20",width:"40",height:"40",fill:"#E0E0E0",stroke:"black","stroke-width":"1"}),(0,r.jsx)("text",{x:"170",y:"45","text-anchor":"middle","font-size":"12",children:"Pos 3"}),(0,r.jsx)("path",{d:"M 20 70 L 20 90 L 120 90 L 120 70",stroke:"blue","stroke-width":"2",fill:"none"}),(0,r.jsx)("text",{x:"70",y:"110","text-anchor":"middle","font-size":"11",fill:"blue",children:"Reach with k=2 swaps"}),(0,r.jsx)("text",{x:"0",y:"140","font-size":"12",children:"1. Find smallest in reach"}),(0,r.jsx)("text",{x:"0",y:"160","font-size":"12",children:"2. Bubble it to current position"}),(0,r.jsx)("text",{x:"0",y:"180","font-size":"12",children:"3. Reduce k by swaps used"}),(0,r.jsx)("text",{x:"0",y:"200","font-size":"12",children:"4. Move to next position"})]}),(0,r.jsxs)("g",{transform:"translate(350, 60)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"14","font-weight":"bold",children:"Example Reach:"}),(0,r.jsx)("text",{x:"0",y:"25","font-size":"12",children:"Position: 0, k = 3"}),(0,r.jsx)("text",{x:"0",y:"45","font-size":"12",children:"Can reach: indices 0, 1, 2, 3"}),(0,r.jsx)("text",{x:"0",y:"70","font-size":"12",children:"Position: 1, k = 1"}),(0,r.jsx)("text",{x:"0",y:"90","font-size":"12",children:"Can reach: indices 1, 2"}),(0,r.jsx)("text",{x:"0",y:"115","font-size":"12",children:"Position: 2, k = 0"}),(0,r.jsx)("text",{x:"0",y:"135","font-size":"12",children:"Can reach: index 2 only"})]})]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Greedy Approach"}),": For each position from left to right, find the smallest element within reach (k swaps) and bubble it to that position."]}),"\n",(0,r.jsx)(t.h2,{id:"step-by-step-algorithm",children:"Step-by-Step Algorithm"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsxs)(a.A,{value:"visual",label:"Visual Walkthrough",children:[(0,r.jsx)(t.h3,{id:"complete-example-5-3-1-2-4-with-k--3",children:"Complete Example: [5, 3, 1, 2, 4] with k = 3"}),(0,r.jsxs)("svg",{viewBox:"0 0 800 600",xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("text",{x:"400",y:"25","text-anchor":"middle","font-size":"18","font-weight":"bold",children:"Detailed Algorithm Execution"}),(0,r.jsxs)("g",{transform:"translate(50, 50)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"12","font-weight":"bold",children:"Initial: [5, 3, 1, 2, 4], k=3"}),(0,r.jsxs)("g",{transform:"translate(0, 10)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"30",height:"30",fill:"#FFB6C1",stroke:"black"}),(0,r.jsx)("text",{x:"15",y:"20","text-anchor":"middle",children:"5"}),(0,r.jsx)("rect",{x:"35",y:"0",width:"30",height:"30",fill:"#FFE4B5",stroke:"black"}),(0,r.jsx)("text",{x:"50",y:"20","text-anchor":"middle",children:"3"}),(0,r.jsx)("rect",{x:"70",y:"0",width:"30",height:"30",fill:"#98FB98",stroke:"black"}),(0,r.jsx)("text",{x:"85",y:"20","text-anchor":"middle",children:"1"}),(0,r.jsx)("rect",{x:"105",y:"0",width:"30",height:"30",fill:"#87CEEB",stroke:"black"}),(0,r.jsx)("text",{x:"120",y:"20","text-anchor":"middle",children:"2"}),(0,r.jsx)("rect",{x:"140",y:"0",width:"30",height:"30",fill:"#DDA0DD",stroke:"black"}),(0,r.jsx)("text",{x:"155",y:"20","text-anchor":"middle",children:"4"})]})]}),(0,r.jsxs)("g",{transform:"translate(50, 120)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"12","font-weight":"bold",children:"Step 1: Position 0, reach=[0,1,2,3], min=1 at index 2"}),(0,r.jsx)("text",{x:"0",y:"20","font-size":"11",children:"Bubble 1: [5,1,3,2,4] \u2192 [1,5,3,2,4], k=1"}),(0,r.jsxs)("g",{transform:"translate(0, 30)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"30",height:"30",fill:"#98FB98",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"15",y:"20","text-anchor":"middle",children:"1"}),(0,r.jsx)("rect",{x:"35",y:"0",width:"30",height:"30",fill:"#FFB6C1",stroke:"black"}),(0,r.jsx)("text",{x:"50",y:"20","text-anchor":"middle",children:"5"}),(0,r.jsx)("rect",{x:"70",y:"0",width:"30",height:"30",fill:"#FFE4B5",stroke:"black"}),(0,r.jsx)("text",{x:"85",y:"20","text-anchor":"middle",children:"3"}),(0,r.jsx)("rect",{x:"105",y:"0",width:"30",height:"30",fill:"#87CEEB",stroke:"black"}),(0,r.jsx)("text",{x:"120",y:"20","text-anchor":"middle",children:"2"}),(0,r.jsx)("rect",{x:"140",y:"0",width:"30",height:"30",fill:"#DDA0DD",stroke:"black"}),(0,r.jsx)("text",{x:"155",y:"20","text-anchor":"middle",children:"4"})]})]}),(0,r.jsxs)("g",{transform:"translate(50, 220)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"12","font-weight":"bold",children:"Step 2: Position 1, reach=[1,2], min=2 at index 3"}),(0,r.jsx)("text",{x:"0",y:"20","font-size":"11",children:"Bubble 2: [1,2,5,3,4], k=0"}),(0,r.jsxs)("g",{transform:"translate(0, 30)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"30",height:"30",fill:"#98FB98",stroke:"black"}),(0,r.jsx)("text",{x:"15",y:"20","text-anchor":"middle",children:"1"}),(0,r.jsx)("rect",{x:"35",y:"0",width:"30",height:"30",fill:"#87CEEB",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"50",y:"20","text-anchor":"middle",children:"2"}),(0,r.jsx)("rect",{x:"70",y:"0",width:"30",height:"30",fill:"#FFB6C1",stroke:"black"}),(0,r.jsx)("text",{x:"85",y:"20","text-anchor":"middle",children:"5"}),(0,r.jsx)("rect",{x:"105",y:"0",width:"30",height:"30",fill:"#FFE4B5",stroke:"black"}),(0,r.jsx)("text",{x:"120",y:"20","text-anchor":"middle",children:"3"}),(0,r.jsx)("rect",{x:"140",y:"0",width:"30",height:"30",fill:"#DDA0DD",stroke:"black"}),(0,r.jsx)("text",{x:"155",y:"20","text-anchor":"middle",children:"4"})]})]}),(0,r.jsxs)("g",{transform:"translate(50, 320)",children:[(0,r.jsx)("text",{x:"0",y:"0","font-size":"12","font-weight":"bold",children:"Step 3+: No more swaps available (k=0)"}),(0,r.jsx)("rect",{x:"0",y:"20",width:"200",height:"50",fill:"#FFD700",stroke:"black","stroke-width":"2",rx:"5"}),(0,r.jsx)("text",{x:"100",y:"40","text-anchor":"middle","font-size":"14","font-weight":"bold",children:"Final Result:"}),(0,r.jsx)("text",{x:"100",y:"58","text-anchor":"middle","font-size":"14",children:"[1, 2, 5, 3, 4]"})]}),(0,r.jsxs)("g",{transform:"translate(400, 120)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"250",height:"100",fill:"#F0F8FF",stroke:"black",rx:"5"}),(0,r.jsx)("text",{x:"125",y:"25","text-anchor":"middle","font-size":"14","font-weight":"bold",children:"Algorithm Complexity"}),(0,r.jsx)("text",{x:"10",y:"50","font-size":"11",children:"Time: O(n\xb2) - nested loops"}),(0,r.jsx)("text",{x:"10",y:"70","font-size":"11",children:"Space: O(1) - in-place swaps"}),(0,r.jsx)("text",{x:"10",y:"90","font-size":"11",children:"Optimal for small k values"})]})]})]}),(0,r.jsx)(a.A,{value:"trace",label:"Execution Trace",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"Input: arr = [5, 3, 1], k = 2\n\nIteration 1: Position i = 0\n  Remaining swaps: 2\n  Search range: indices 0 to min(2, 2) = 2\n  Elements in range: [5, 3, 1]\n  Minimum: 1 at index 2\n  \n  Bubbling 1 from index 2 to 0:\n    Swap arr[2] \u2194 arr[1]: [5, 1, 3]\n    Swap arr[1] \u2194 arr[0]: [1, 5, 3]\n  Swaps used: 2\n  Remaining: 0\n\nIteration 2: Position i = 1\n  Remaining swaps: 0\n  Search range: indices 1 to min(2, 1) = 1\n  Elements in range: [5]\n  No swaps available, skip\n\nIteration 3: Position i = 2\n  Already at last position, skip\n\nOutput: [1, 5, 3]\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:'title="ElementSwapping.cs"',children:'using System;\n\nclass ElementSwapping \n{\n    static void Main(string[] args) \n    {\n        var result1 = FindMinArray(new int[] {5, 3, 1}, 2);\n        Console.WriteLine($"[{string.Join(", ", result1)}]"); // [1, 5, 3]\n    }\n\n    private static int[] FindMinArray(int[] arr, int k) \n    {\n        int[] result = new int[arr.Length];\n        Array.Copy(arr, result, arr.Length);\n        \n        int remainingSwaps = k;\n        \n        for (int i = 0; i < result.Length && remainingSwaps > 0; i++) \n        {\n            // Find smallest element within k swaps from position i\n            int minIndex = i;\n            int minValue = result[i];\n            \n            for (int j = i + 1; j < result.Length && j <= i + remainingSwaps; j++) \n            {\n                if (result[j] < minValue) \n                {\n                    minValue = result[j];\n                    minIndex = j;\n                }\n            }\n            \n            // Bubble the minimum element to position i\n            while (minIndex > i && remainingSwaps > 0) \n            {\n                // Swap with previous element\n                int temp = result[minIndex];\n                result[minIndex] = result[minIndex - 1];\n                result[minIndex - 1] = temp;\n                \n                minIndex--;\n                remainingSwaps--;\n            }\n        }\n        \n        return result;\n    }\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"optimized-implementation-with-better-tracking",children:"Optimized Implementation with Better Tracking"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:'title="OptimizedElementSwapping.cs"',children:"using System;\nusing System.Collections.Generic;\n\nclass OptimizedElementSwapping \n{\n    private static int[] FindMinArray(int[] arr, int k) \n    {\n        int[] result = (int[])arr.Clone();\n        int n = result.Length;\n        int swapsRemaining = k;\n        \n        // Track swap history for debugging\n        var swapHistory = new List<(int, int)>();\n        \n        for (int targetPos = 0; targetPos < n && swapsRemaining > 0; targetPos++) \n        {\n            // Find the smallest element within reach\n            int minIndex = targetPos;\n            int minValue = result[targetPos];\n            int maxReach = Math.Min(n - 1, targetPos + swapsRemaining);\n            \n            for (int j = targetPos + 1; j <= maxReach; j++) \n            {\n                if (result[j] < minValue || \n                   (result[j] == minValue && j < minIndex)) \n                {\n                    minValue = result[j];\n                    minIndex = j;\n                }\n            }\n            \n            // Bubble the minimum element to targetPos\n            while (minIndex > targetPos && swapsRemaining > 0) \n            {\n                // Swap with previous element\n                Swap(result, minIndex, minIndex - 1);\n                swapHistory.Add((minIndex, minIndex - 1));\n                \n                minIndex--;\n                swapsRemaining--;\n            }\n        }\n        \n        return result;\n    }\n    \n    private static void Swap(int[] arr, int i, int j) \n    {\n        int temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"complexity-analysis",children:"Complexity Analysis"}),"\n",(0,r.jsx)(t.h3,{id:"visual-complexity-breakdown",children:"Visual Complexity Breakdown"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-mermaid",children:'graph TD\n    subgraph "Time Complexity"\n        TC["O(n\xb2)"]\n        TC1["Outer loop: O(n)<br/>For each position"]\n        TC2["Inner search: O(n)<br/>Find minimum in range"]\n        TC3["Bubble operation: O(n)<br/>Move element to position"]\n        \n        TC --\x3e TC1\n        TC --\x3e TC2\n        TC --\x3e TC3\n    end\n    \n    subgraph "Space Complexity"\n        SC["O(1)"]\n        SC1["In-place swapping"]\n        SC2["Few auxiliary variables"]\n        \n        SC --\x3e SC1\n        SC --\x3e SC2\n    end\n    \n    style TC fill:#FFE4B5\n    style SC fill:#E6E6FA\n'})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Complexity"}),": O(n\xb2) time, O(1) space (excluding output)"]}),"\n",(0,r.jsx)(t.h2,{id:"edge-cases--validation",children:"Edge Cases & Validation"}),"\n",(0,r.jsxs)("svg",{viewBox:"0 0 700 400",xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsx)("text",{x:"350",y:"25","text-anchor":"middle","font-size":"16","font-weight":"bold",children:"Edge Cases to Consider"}),(0,r.jsxs)("g",{transform:"translate(50, 50)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"250",height:"60",fill:"#FFE4E1",stroke:"black",rx:"5"}),(0,r.jsx)("text",{x:"125",y:"25","text-anchor":"middle","font-size":"12","font-weight":"bold",children:"k = 0 (No swaps)"}),(0,r.jsx)("text",{x:"125",y:"45","text-anchor":"middle","font-size":"11",children:"Input: [3,2,1], k=0"}),(0,r.jsx)("text",{x:"125",y:"60","text-anchor":"middle","font-size":"11",children:"Output: [3,2,1] (unchanged)"})]}),(0,r.jsxs)("g",{transform:"translate(350, 50)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"250",height:"60",fill:"#E6FFE6",stroke:"black",rx:"5"}),(0,r.jsx)("text",{x:"125",y:"25","text-anchor":"middle","font-size":"12","font-weight":"bold",children:"k \u2265 n(n-1)/2 (Unlimited)"}),(0,r.jsx)("text",{x:"125",y:"45","text-anchor":"middle","font-size":"11",children:"Can achieve fully sorted array"}),(0,r.jsx)("text",{x:"125",y:"60","text-anchor":"middle","font-size":"11",children:"Output: Complete sort possible"})]}),(0,r.jsxs)("g",{transform:"translate(50, 130)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"250",height:"60",fill:"#E6E6FA",stroke:"black",rx:"5"}),(0,r.jsx)("text",{x:"125",y:"25","text-anchor":"middle","font-size":"12","font-weight":"bold",children:"Already Sorted"}),(0,r.jsx)("text",{x:"125",y:"45","text-anchor":"middle","font-size":"11",children:"Input: [1,2,3], k=5"}),(0,r.jsx)("text",{x:"125",y:"60","text-anchor":"middle","font-size":"11",children:"Output: [1,2,3] (no change needed)"})]}),(0,r.jsxs)("g",{transform:"translate(350, 130)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"250",height:"60",fill:"#FFFACD",stroke:"black",rx:"5"}),(0,r.jsx)("text",{x:"125",y:"25","text-anchor":"middle","font-size":"12","font-weight":"bold",children:"Duplicates"}),(0,r.jsx)("text",{x:"125",y:"45","text-anchor":"middle","font-size":"11",children:"Input: [2,2,1], k=1"}),(0,r.jsx)("text",{x:"125",y:"60","text-anchor":"middle","font-size":"11",children:"Output: [2,1,2] (partial improvement)"})]}),(0,r.jsxs)("g",{transform:"translate(200, 220)",children:[(0,r.jsx)("rect",{x:"0",y:"0",width:"300",height:"120",fill:"#F0F8FF",stroke:"black","stroke-width":"2",rx:"10"}),(0,r.jsx)("text",{x:"150",y:"30","text-anchor":"middle","font-size":"14","font-weight":"bold",children:"Key Strategy Points"}),(0,r.jsx)("text",{x:"10",y:"55","font-size":"11",children:"1. Always process positions left to right"}),(0,r.jsx)("text",{x:"10",y:"75","font-size":"11",children:"2. Find minimum within reachable range"}),(0,r.jsx)("text",{x:"10",y:"95","font-size":"11",children:"3. Use minimum swaps to bring it forward"}),(0,r.jsx)("text",{x:"10",y:"115","font-size":"11",children:"4. Track remaining swaps carefully"})]})]}),"\n",(0,r.jsx)(t.h2,{id:"practice-variations",children:"Practice Variations"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-mermaid",children:'graph LR\n    Base["Element Swapping<br/>k adjacent swaps"]\n    \n    V1["Maximize Array<br/>Lexicographically largest"]\n    V2["Cyclic Swaps<br/>Array wraps around"]\n    V3["Weighted Swaps<br/>Different swap costs"]\n    V4["K-Distance Swaps<br/>Swap within distance k"]\n    \n    Base --\x3e V1\n    Base --\x3e V2\n    Base --\x3e V3\n    Base --\x3e V4\n    \n    style Base fill:#FFD700\n    style V1 fill:#FFE4B5\n    style V2 fill:#E6E6FA\n    style V3 fill:#98FB98\n    style V4 fill:#FFB6C1\n'})}),"\n",(0,r.jsx)(t.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,r.jsx)(t.h3,{id:"visual-summary",children:"Visual Summary"}),"\n",(0,r.jsxs)("svg",{viewBox:"0 0 700 200",xmlns:"http://www.w3.org/2000/svg",children:[(0,r.jsxs)("g",{transform:"translate(50, 50)",children:[(0,r.jsx)("circle",{cx:"40",cy:"40",r:"35",fill:"#90EE90",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"40",y:"45","text-anchor":"middle","font-size":"24","font-weight":"bold",children:"1"}),(0,r.jsx)("text",{x:"40",y:"90","text-anchor":"middle","font-size":"11","font-weight":"bold",children:"Greedy Works"}),(0,r.jsx)("text",{x:"40",y:"105","text-anchor":"middle","font-size":"10",children:"Leftmost positions"}),(0,r.jsx)("text",{x:"40",y:"120","text-anchor":"middle","font-size":"10",children:"have priority"})]}),(0,r.jsxs)("g",{transform:"translate(250, 50)",children:[(0,r.jsx)("circle",{cx:"40",cy:"40",r:"35",fill:"#87CEEB",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"40",y:"45","text-anchor":"middle","font-size":"24","font-weight":"bold",children:"2"}),(0,r.jsx)("text",{x:"40",y:"90","text-anchor":"middle","font-size":"11","font-weight":"bold",children:"Limited Reach"}),(0,r.jsx)("text",{x:"40",y:"105","text-anchor":"middle","font-size":"10",children:"k swaps define"}),(0,r.jsx)("text",{x:"40",y:"120","text-anchor":"middle","font-size":"10",children:"search window"})]}),(0,r.jsxs)("g",{transform:"translate(450, 50)",children:[(0,r.jsx)("circle",{cx:"40",cy:"40",r:"35",fill:"#FFB6C1",stroke:"black","stroke-width":"2"}),(0,r.jsx)("text",{x:"40",y:"45","text-anchor":"middle","font-size":"24","font-weight":"bold",children:"3"}),(0,r.jsx)("text",{x:"40",y:"90","text-anchor":"middle","font-size":"11","font-weight":"bold",children:"Bubble Pattern"}),(0,r.jsx)("text",{x:"40",y:"105","text-anchor":"middle","font-size":"10",children:"Move elements"}),(0,r.jsx)("text",{x:"40",y:"120","text-anchor":"middle","font-size":"10",children:"through swaps"})]})]}),"\n",(0,r.jsxs)(t.p,{children:["\u2705 ",(0,r.jsx)(t.strong,{children:"Greedy optimization"})," - Prioritize leftmost positions for smallest elements",(0,r.jsx)(t.br,{}),"\n","\u2705 ",(0,r.jsx)(t.strong,{children:"Constrained bubble sort"})," - Adapt classic algorithms to constraints",(0,r.jsx)(t.br,{}),"\n","\u2705 ",(0,r.jsx)(t.strong,{children:"Lexicographic ordering"})," - Earlier positions have higher priority\n\u2705 ",(0,r.jsx)(t.strong,{children:"Swap budget management"})," - Track and optimize swap usage\n\u2705 ",(0,r.jsx)(t.strong,{children:"Pattern recognition"})," - Similar to selection sort with distance constraints"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var i=n(4164);const r={tabItem:"tabItem_Ymn6"};var s=n(4848);function l({children:e,hidden:t,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,n),hidden:t,children:e})}}}]);